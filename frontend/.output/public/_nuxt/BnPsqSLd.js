import{_ as V,a1 as T,n as k,K as C,r as i,f as R,c as b,o as w,a as o,b as a,y as U,X as q,C as D,P as r,d as u,G as N,$ as I,D as B,T as E}from"./DU3s_J-k.js";import{a as K}from"./DW_MHI2K.js";const $={id:"container",class:"card flex justify-center"},L={class:"flex flex-col gap-4 container"},j={for:"title"},z={class:"pi pi-info-circle"},S={key:0,class:"p-error"},A={id:"url",class:"flex flex-col gap-2"},F={for:"url"},G={class:"pi pi-info-circle"},O={id:"description",class:"flex flex-col gap-2"},P={for:"Description"},X={class:"pi pi-info-circle"},H={id:"known_issues",class:"flex flex-col gap-2"},J={for:"Known Issues"},M={class:"pi pi-info-circle"},Q={__name:"create_tool",setup(W){T();const v=k(),x=C("dialogRef"),l=i(""),d=i(!1),c=i("");i(!1);const p=i("");i(!1);const f=i("");i(!1);async function g(m){const e=new FormData;if(e.append("name",l.value),e.append("description",c.value),e.append("known_issues",p.value),e.append("url",f.value),l.value.length==0){d.value=!0,v.add({severity:"error",summary:"Request Error",detail:"Collectio Tool Name is required.",life:3e3});return}l.value=encodeURIComponent(l.value),e.forEach(t=>{console.log(t)}),await K.post("/api/collectionTools",e,{headers:{"Content-Type":"multipart/form-data"}}).then(t=>{console.log(t.data),x.value.close(l.value)}).catch(t=>{console.log(t),v.add({severity:"error",summary:"Upload Error",detail:t.response.data.detail,life:3e3})})}return R(l,m=>{d.value=m.length===0}),(m,e)=>{const t=U,_=N,h=I,y=B,n=E;return w(),b("div",$,[o("div",L,[a(t,{position:"bottom-right"}),o("div",{id:"name",class:q([{error:d.value},"flex flex-col gap-2"])},[o("label",j,[r(o("i",z,null,512),[[n,"Short name of the collection tool (e.g. ipfixprobe) which is used as the unique identifier",void 0,{right:!0}]]),e[5]||(e[5]=u(" Collection Tool Name* "))]),a(_,{id:"name",modelValue:l.value,"onUpdate:modelValue":e[0]||(e[0]=s=>l.value=s),"aria-describedby":"acronym-help",placeholder:"Collection Tool Name",onBlur:e[1]||(e[1]=s=>d.value=l.value.length===0)},null,8,["modelValue"]),d.value?(w(),b("small",S,e[6]||(e[6]=[o("i",{class:"pi pi-exclamation-circle",style:{"font-size":"0.8rem"}},null,-1),u(" Collection tool name is required and must be unique. ")]))):D("",!0)],2),o("div",A,[o("label",F,[r(o("i",G,null,512),[[n,"URL where the collection tool may be found.",void 0,{right:!0}]]),e[7]||(e[7]=u(" URL "))]),a(_,{id:"url",modelValue:f.value,"onUpdate:modelValue":e[2]||(e[2]=s=>f.value=s),"aria-describedby":"url-help",placeholder:"URL"},null,8,["modelValue"])]),o("div",O,[o("label",P,[r(o("i",X,null,512),[[n,"Overview description of the collection tool",void 0,{right:!0}]]),e[8]||(e[8]=u(" Description "))]),r(a(h,{id:"description",modelValue:c.value,"onUpdate:modelValue":e[3]||(e[3]=s=>c.value=s),"aria-describedby":"description-help",placeholder:"Description...",rows:"5",cols:"30"},null,8,["modelValue"]),[[n,"The description of the dataset.",void 0,{bottom:!0}]])]),o("div",H,[o("label",J,[r(o("i",M,null,512),[[n,"Known issues of the collection tool",void 0,{right:!0}]]),e[9]||(e[9]=u(" Known Issues "))]),r(a(h,{id:"known_issues",modelValue:p.value,"onUpdate:modelValue":e[4]||(e[4]=s=>p.value=s),"aria-describedby":"known_issues-help",placeholder:"Known Issues...",rows:"5",cols:"30"},null,8,["modelValue"]),[[n,"The known issues of the dataset.",void 0,{bottom:!0}]])]),a(y,{label:"Submit",icon:"pi pi-upload",onClick:g,class:"w-4/12"}),e[10]||(e[10]=o("footer",null,[o("small",null,"* required field")],-1))])])}}},ee=V(Q,[["__scopeId","data-v-fdb1da21"]]);export{ee as default};
